import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { useForm } from "react-hook-form";
import styles from "../styles/Home.module.css";
import { supabase } from "../lib/supabaseClient";
import { Button, Flex, Input } from "@chakra-ui/react";
import { useRouter } from "next/router";

const Login: NextPage = () => {
  const [loading, setLoading] = useState(false);
  const [imageKey, setImageKey] = useState<string | undefined>();
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  const router = useRouter();

  const handleLogin = async (data: any) => {
    try {
      setLoading(true);
      const { error } = await supabase.auth.signIn({
        email: data?.email,
        password: data?.password,
      });
      if (error) throw error;
      alert("Check your email for the login link!");
      router.push("/profile");
    } catch (error) {
      alert(error);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className={styles.container}>
      {loading ? <>Loading...</> : null}
      <Head>
        <title>FANQ POC | LOGIN</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          <a href="https://nextjs.org">LOGIN</a>
        </h1>

        <Flex justify={"center"}>
          <form onSubmit={handleSubmit(handleLogin)}>
            <Flex
              flexDirection={"column"}
              gap="4"
              marginTop={10}
              maxWidth={400}
            >
              {/* register your input into the hook by invoking the "register" function */}
              <Input
                placeholder="email"
                {...register("email", { required: true })}
              />
              {errors.email && <span>Email is required</span>}

              <Input
                type={"password"}
                placeholder="password"
                {...register("password", { required: true })}
              />
              {errors.password && <span>Password is required</span>}

              <Button type="submit" isLoading={loading} colorScheme="teal">
                Login
              </Button>
            </Flex>
          </form>
        </Flex>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Login;
